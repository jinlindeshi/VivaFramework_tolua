//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class VivaFramework_ResourceManagerWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(VivaFramework.ResourceManager), typeof(Manager));
		L.RegFunction("Initialize", Initialize);
		L.RegFunction("LoadPrefabAtPath", LoadPrefabAtPath);
		L.RegFunction("LoadAssetAtPathAsync", LoadAssetAtPathAsync);
		L.RegFunction("LoadAssetAtPath", LoadAssetAtPath);
		L.RegFunction("LoadMaterialAtPath", LoadMaterialAtPath);
		L.RegFunction("LoadSpriteAtPath", LoadSpriteAtPath);
		L.RegFunction("UnLoadBundleByAssetPath", UnLoadBundleByAssetPath);
		L.RegFunction("UnLoadBundleByFuzzyKey", UnLoadBundleByFuzzyKey);
		L.RegFunction("LoadAssetBundle", LoadAssetBundle);
		L.RegFunction("GetLoadingRequestInfo", GetLoadingRequestInfo);
		L.RegFunction("GetLoadingDependsList", GetLoadingDependsList);
		L.RegFunction("UnloadAllBundles", UnloadAllBundles);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Initialize(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			VivaFramework.ResourceManager obj = (VivaFramework.ResourceManager)ToLua.CheckObject<VivaFramework.ResourceManager>(L, 1);
			obj.Initialize();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoadPrefabAtPath(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			VivaFramework.ResourceManager obj = (VivaFramework.ResourceManager)ToLua.CheckObject<VivaFramework.ResourceManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			UnityEngine.GameObject o = obj.LoadPrefabAtPath(arg0);
			ToLua.PushSealed(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoadAssetAtPathAsync(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			VivaFramework.ResourceManager obj = (VivaFramework.ResourceManager)ToLua.CheckObject<VivaFramework.ResourceManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			LuaFunction arg1 = ToLua.CheckLuaFunction(L, 3);
			obj.LoadAssetAtPathAsync(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoadAssetAtPath(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			VivaFramework.ResourceManager obj = (VivaFramework.ResourceManager)ToLua.CheckObject<VivaFramework.ResourceManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			UnityEngine.Object o = obj.LoadAssetAtPath(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoadMaterialAtPath(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			VivaFramework.ResourceManager obj = (VivaFramework.ResourceManager)ToLua.CheckObject<VivaFramework.ResourceManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			UnityEngine.Material o = obj.LoadMaterialAtPath(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoadSpriteAtPath(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			VivaFramework.ResourceManager obj = (VivaFramework.ResourceManager)ToLua.CheckObject<VivaFramework.ResourceManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			UnityEngine.Sprite o = obj.LoadSpriteAtPath(arg0);
			ToLua.PushSealed(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnLoadBundleByAssetPath(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				VivaFramework.ResourceManager obj = (VivaFramework.ResourceManager)ToLua.CheckObject<VivaFramework.ResourceManager>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				bool o = obj.UnLoadBundleByAssetPath(arg0);
				LuaDLL.lua_pushboolean(L, o);
				return 1;
			}
			else if (count == 3)
			{
				VivaFramework.ResourceManager obj = (VivaFramework.ResourceManager)ToLua.CheckObject<VivaFramework.ResourceManager>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
				bool o = obj.UnLoadBundleByAssetPath(arg0, arg1);
				LuaDLL.lua_pushboolean(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: VivaFramework.ResourceManager.UnLoadBundleByAssetPath");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnLoadBundleByFuzzyKey(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			VivaFramework.ResourceManager obj = (VivaFramework.ResourceManager)ToLua.CheckObject<VivaFramework.ResourceManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			obj.UnLoadBundleByFuzzyKey(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoadAssetBundle(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 3)
			{
				VivaFramework.ResourceManager obj = (VivaFramework.ResourceManager)ToLua.CheckObject<VivaFramework.ResourceManager>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
				UnityEngine.AssetBundle o = obj.LoadAssetBundle(arg0, arg1);
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 4)
			{
				VivaFramework.ResourceManager obj = (VivaFramework.ResourceManager)ToLua.CheckObject<VivaFramework.ResourceManager>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
				LuaFunction arg2 = ToLua.CheckLuaFunction(L, 4);
				UnityEngine.AssetBundle o = obj.LoadAssetBundle(arg0, arg1, arg2);
				ToLua.Push(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: VivaFramework.ResourceManager.LoadAssetBundle");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetLoadingRequestInfo(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			VivaFramework.ResourceManager obj = (VivaFramework.ResourceManager)ToLua.CheckObject<VivaFramework.ResourceManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			UnityEngine.AssetBundleCreateRequest o = obj.GetLoadingRequestInfo(arg0);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetLoadingDependsList(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			VivaFramework.ResourceManager obj = (VivaFramework.ResourceManager)ToLua.CheckObject<VivaFramework.ResourceManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			string[] o = obj.GetLoadingDependsList(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnloadAllBundles(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			VivaFramework.ResourceManager obj = (VivaFramework.ResourceManager)ToLua.CheckObject<VivaFramework.ResourceManager>(L, 1);
			obj.UnloadAllBundles();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

