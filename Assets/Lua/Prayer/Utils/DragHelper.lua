---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by likai.
--- DateTime: 2020-06-01 10:11
--- 拖动助手
---@class DragHelper
local DragHelper = class("DragHelper")

DragHelper.HORIZONTAL_DIRECTION = 1
DragHelper.VERTICAL_DIRECTION = 2
DragHelper.ALL_DIRECTION = 3

function DragHelper:Ctor(gameObject, moveRT, dragCall, endDragCall, startDragCall)
    self.gameObject = gameObject ---@type UnityEngine.GameObject
    self.moveRT = moveRT ---@type UnityEngine.RectTransform

    self.dragCall = dragCall
    self.endDragCall = endDragCall
    self.startDragCall = startDragCall

    self.enabled = true

    self.dragHandler = AddOrGetComponent(self.gameObject, Prayer.DragHandler)

    local tag = self.gameObject
    self.uiCanvas = tag:GetComponent(typeof(UnityEngine.Canvas))
    while tag.transform.parent and tolua.isnull(self.uiCanvas) do
        tag = tag.transform.parent
        self.uiCanvas = tag:GetComponent(typeof(UnityEngine.Canvas))
    end

    self.direction = DragHelper.ALL_DIRECTION


    self.startDragLuaFun = happyCall(self, self.BeginDragHandler)
    self.dragLuaFun = happyCall(self, self.DragHandler)
    self.endDragLuaFun = happyCall(self, self.EndDragHandler)

    self.dragHandler:AddCall(Prayer.DragHandler.BEGIN_DRAG, self.startDragLuaFun)
    self.dragHandler:AddCall(Prayer.DragHandler.DRAG, self.dragLuaFun)
end

---设置拖动方向
function DragHelper:SetDragDirection(dir)
    self.direction = dir
end

---设置限制方法
function DragHelper:SetLimitFun(dir)
    self.limitFun = dir
end

function DragHelper:SetEnabled(boo)
    self.enabled = boo
end


function DragHelper:SetDragCall(fun)
    self.dragCall = fun
end

function DragHelper:SetEndDragCall(fun)
    self.endDragCall = fun
end

function DragHelper:SetStartDragCall(fun)
    self.startDragCall = fun
end

---真实屏幕点击坐标 转化为UI坐标
---@param uiCanvas UnityEngine.Canvas
---@param tag UnityEngine.GameObject
function DragHelper:ScreenToUICanvasPoint(clickPt, uiCanvas, tag)
    local vpt1 = uiCanvas.worldCamera:ScreenToViewportPoint(clickPt)
    local vpt2 = uiCanvas.worldCamera:WorldToViewportPoint(tag.transform.position)

    return uiCanvas.worldCamera:ViewportToWorldPoint(Vector3.New(vpt1.x, vpt1.y, vpt2.z))
end

---开始拖放
---@param data UnityEngine.EventSystems.PointerEventData
function DragHelper:BeginDragHandler(data)
    if self.enabled ~= true then
        return
    end
    self.startLoc = self:ScreenToUICanvasPoint(data.position, self.uiCanvas, self.gameObject)
    --print("DragHelper:BeginDragHandler", data.position, self.uiCanvas, self.startLoc)
    if self.moveRT then
        self.UIStartLoc = self.moveRT.position
        self.UIStartAnchorPos = self.moveRT.anchoredPosition
    end

    self.dragHandler:AddCall(Prayer.DragHandler.END_DRAG, self.endDragLuaFun)

    if self.startDragCall then
        self.startDragCall()
    end
end

---拖放中
---@param data UnityEngine.EventSystems.PointerEventData
function DragHelper:DragHandler(data)
    if self.enabled ~= true then
        return
    end
    local p = self:ScreenToUICanvasPoint(data.position, self.uiCanvas, self.gameObject)
    --print("DragHelper:DragHandler", data.position, self.uiCanvas, self.startLoc, p)
    local fixV = p - self.startLoc ---从拖动开始起 变化值的世界坐标

    if self.moveRT then
        self.moveRT.position = self.UIStartLoc + fixV
        if self.limitFun then
            self.moveRT.anchoredPosition = self.limitFun(self.moveRT.anchoredPosition, self.moveRT.sizeDelta.x, self.moveRT.sizeDelta.y)
        end
        if self.direction == DragHelper.HORIZONTAL_DIRECTION then
            self.moveRT.anchoredPosition = Vector2.New(self.moveRT.anchoredPosition.x, self.UIStartAnchorPos.y)
        end
        if self.direction == DragHelper.VERTICAL_DIRECTION then
            self.moveRT.anchoredPosition = Vector2.New(self.UIStartAnchorPos.x, self.moveRT.anchoredPosition.y)
        end
    end

    if self.dragCall then
        self.dragCall(fixV, data.position, p)
    end
end

---结束拖放
---@param data UnityEngine.EventSystems.PointerEventData
function DragHelper:EndDragHandler(data)
    self.startLoc = nil
    self.UIStartLoc = nil
    self.UIStartAnchorPos = nil
    self.dragHandler:RemoveCall(Prayer.DragHandler.END_DRAG, self.endDragLuaFun)

    if self.endDragCall then
        self.endDragCall()
    end
end

function DragHelper:Dispose()
    self.dragHandler:RemoveCall(Prayer.DragHandler.BEGIN_DRAG, self.startDragLuaFun)
    self.dragHandler:RemoveCall(Prayer.DragHandler.DRAG, self.dragLuaFun)
    self.dragHandler:RemoveCall(Prayer.DragHandler.END_DRAG, self.endDragLuaFun)

    self.dragHandler.enabled = false
end

return DragHelper