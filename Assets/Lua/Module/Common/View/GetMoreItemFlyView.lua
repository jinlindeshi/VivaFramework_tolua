---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by sunshuo.
--- DateTime: 2020/9/10 10:43
---
local prefabUrl = "Prefabs/Common/GetItemFlyRoot.prefab"
local getNumberImageUrl = "Prefabs/Common/getImage.prefab"

---@class GetMoreItemFlyView:LuaObj
---@field New fun(parent:UnityEngine.GameObject, startPos:Vector3, endPos:Vector3, count:number):GetMoreItemFlyView
local GetMoreItemFlyView = class("Module.Common.GetMoreItemFlyView", LuaObj)


local range = 120
function GetMoreItemFlyView:Ctor(parent, startPos, endPos, count, iconPath, itemCount, callback, timeScale, scale, bornWorldPos)
    if startPos == nil then
        error("GetItemFlyView startPos is nil")
        return
    end
    self.endPos = endPos
    self.count = count
    self.iconPath = iconPath
    self.itemCount = itemCount
    self.callback = callback
    self.timeScale = timeScale
    scale = scale or 1
    GetMoreItemFlyView.super.Ctor(self, prefabUrl, nil, parent)

    self.rect = GetComponent.RectTransform(self.gameObject)
    self.rect.sizeDelta = Vector3.zero

    local endPos = self.endPos
    --道具图片 默认为龙魂图片
    local sprite = resMgr:LoadSpriteAtPath(self.iconPath)

    self.imageList = {}
    for i = 1, (self.itemCount or 15) do
        local imageObj = CreatePrefab(getNumberImageUrl, self.transform)
        GetComponent.Image(imageObj).sprite = sprite
        local rangeGapX = math.random(0, range * 2) - range
        local rangeGapY = math.random(0, range * 2) - range
        local startPos = Vector3.New(startPos.x + rangeGapX , startPos.y + rangeGapY, startPos.z)
        local flyTime = Vector3.Distance(startPos, endPos) / 900
        if self.timeScale then
            flyTime = flyTime / self.timeScale
        end
        if bornWorldPos then
            imageObj.transform.position = bornWorldPos
            imageObj.transform:DOLocalMove(startPos, 0.3):SetDelay(0.02 * i)
            imageObj.transform:DOScale(Vector3.one * scale * 2, 0.3):SetDelay(0.05 * i)
        else
            imageObj.transform.localPosition = startPos
            imageObj.transform:DOScale(Vector3.one * scale * 2, 0.3)
        end
        --local cg = GetComponent.CanvasGroup(imageObj)
        --cg.alpha = 0
        table.insert(self.imageList, {item = imageObj, flyTime = flyTime})
    end
end

function GetMoreItemFlyView:Next()
    local seq = DOTween.Sequence()
    seq:AppendInterval(1)
    seq:AppendCallback(function()
        for i = 1, #self.imageList do
            local item = self.imageList[i].item
            local cg = GetComponent.CanvasGroup(item)
            local flySeq = DOTween.Sequence()
            flySeq:AppendInterval( math.random(1, 20) * 0.04)
            flySeq:Append(item.transform:DOLocalMove(self.endPos, self.imageList[i].flyTime):SetEase(DOTWEEN_EASE.InCubic))
            flySeq:Append(cg:DOFade(0, 0.3))
            flySeq:AppendCallback(function()
                cg.alpha = 1
                RecyclePrefab(item, getNumberImageUrl)
                if i == #self.imageList then
                    if self.callback then
                        self.callback()
                    end
                end
            end)
        end
    end)
end

return GetMoreItemFlyView