//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class VivaFramework_LuaBehaviourWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(VivaFramework.LuaBehaviour), typeof(View));
		L.RegFunction("SetLuaBehaviourFunc", SetLuaBehaviourFunc);
		L.RegFunction("OnAwake", OnAwake);
		L.RegFunction("AddClick", AddClick);
		L.RegFunction("RemoveClick", RemoveClick);
		L.RegFunction("ClearClick", ClearClick);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("displayName", get_displayName, set_displayName);
		L.RegVar("DisplayName", get_DisplayName, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetLuaBehaviourFunc(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			VivaFramework.LuaBehaviour obj = (VivaFramework.LuaBehaviour)ToLua.CheckObject<VivaFramework.LuaBehaviour>(L, 1);
			string[] arg0 = ToLua.CheckStringArray(L, 2);
			LuaInterface.LuaFunction[] arg1 = ToLua.CheckObjectArray<LuaInterface.LuaFunction>(L, 3);
			string arg2 = ToLua.CheckString(L, 4);
			obj.SetLuaBehaviourFunc(arg0, arg1, arg2);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnAwake(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			VivaFramework.LuaBehaviour obj = (VivaFramework.LuaBehaviour)ToLua.CheckObject<VivaFramework.LuaBehaviour>(L, 1);
			obj.OnAwake();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddClick(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			VivaFramework.LuaBehaviour obj = (VivaFramework.LuaBehaviour)ToLua.CheckObject<VivaFramework.LuaBehaviour>(L, 1);
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
			LuaFunction arg1 = ToLua.CheckLuaFunction(L, 3);
			obj.AddClick(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveClick(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			VivaFramework.LuaBehaviour obj = (VivaFramework.LuaBehaviour)ToLua.CheckObject<VivaFramework.LuaBehaviour>(L, 1);
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
			obj.RemoveClick(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ClearClick(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			VivaFramework.LuaBehaviour obj = (VivaFramework.LuaBehaviour)ToLua.CheckObject<VivaFramework.LuaBehaviour>(L, 1);
			obj.ClearClick();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_displayName(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			VivaFramework.LuaBehaviour obj = (VivaFramework.LuaBehaviour)o;
			string ret = obj.displayName;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index displayName on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_DisplayName(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			VivaFramework.LuaBehaviour obj = (VivaFramework.LuaBehaviour)o;
			string ret = obj.DisplayName;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index DisplayName on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_displayName(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			VivaFramework.LuaBehaviour obj = (VivaFramework.LuaBehaviour)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.displayName = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index displayName on a nil value");
		}
	}
}

