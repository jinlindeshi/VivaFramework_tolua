//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Pathfinding_GridNodeWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Pathfinding.GridNode), typeof(Pathfinding.GridNodeBase));
		L.RegFunction("GetGridGraph", GetGridGraph);
		L.RegFunction("SetGridGraph", SetGridGraph);
		L.RegFunction("HasConnectionInDirection", HasConnectionInDirection);
		L.RegFunction("SetConnectionInternal", SetConnectionInternal);
		L.RegFunction("SetAllConnectionInternal", SetAllConnectionInternal);
		L.RegFunction("ResetConnectionsInternal", ResetConnectionsInternal);
		L.RegFunction("GetNeighbourAlongDirection", GetNeighbourAlongDirection);
		L.RegFunction("ClearConnections", ClearConnections);
		L.RegFunction("GetConnections", GetConnections);
		L.RegFunction("ClosestPointOnNode", ClosestPointOnNode);
		L.RegFunction("GetPortal", GetPortal);
		L.RegFunction("UpdateRecursiveG", UpdateRecursiveG);
		L.RegFunction("Open", Open);
		L.RegFunction("SerializeNode", SerializeNode);
		L.RegFunction("DeserializeNode", DeserializeNode);
		L.RegFunction("New", _CreatePathfinding_GridNode);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("HasConnectionsToAllEightNeighbours", get_HasConnectionsToAllEightNeighbours, null);
		L.RegVar("EdgeNode", get_EdgeNode, set_EdgeNode);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreatePathfinding_GridNode(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				AstarPath arg0 = (AstarPath)ToLua.CheckObject<AstarPath>(L, 1);
				Pathfinding.GridNode obj = new Pathfinding.GridNode(arg0);
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: Pathfinding.GridNode.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetGridGraph(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			uint arg0 = (uint)LuaDLL.luaL_checknumber(L, 1);
			Pathfinding.GridGraph o = Pathfinding.GridNode.GetGridGraph(arg0);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetGridGraph(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 1);
			Pathfinding.GridGraph arg1 = (Pathfinding.GridGraph)ToLua.CheckObject<Pathfinding.GridGraph>(L, 2);
			Pathfinding.GridNode.SetGridGraph(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int HasConnectionInDirection(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Pathfinding.GridNode obj = (Pathfinding.GridNode)ToLua.CheckObject<Pathfinding.GridNode>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			bool o = obj.HasConnectionInDirection(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetConnectionInternal(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			Pathfinding.GridNode obj = (Pathfinding.GridNode)ToLua.CheckObject<Pathfinding.GridNode>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
			obj.SetConnectionInternal(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetAllConnectionInternal(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Pathfinding.GridNode obj = (Pathfinding.GridNode)ToLua.CheckObject<Pathfinding.GridNode>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.SetAllConnectionInternal(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ResetConnectionsInternal(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Pathfinding.GridNode obj = (Pathfinding.GridNode)ToLua.CheckObject<Pathfinding.GridNode>(L, 1);
			obj.ResetConnectionsInternal();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetNeighbourAlongDirection(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Pathfinding.GridNode obj = (Pathfinding.GridNode)ToLua.CheckObject<Pathfinding.GridNode>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			Pathfinding.GridNodeBase o = obj.GetNeighbourAlongDirection(arg0);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ClearConnections(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Pathfinding.GridNode obj = (Pathfinding.GridNode)ToLua.CheckObject<Pathfinding.GridNode>(L, 1);
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.ClearConnections(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetConnections(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Pathfinding.GridNode obj = (Pathfinding.GridNode)ToLua.CheckObject<Pathfinding.GridNode>(L, 1);
			System.Action<Pathfinding.GraphNode> arg0 = (System.Action<Pathfinding.GraphNode>)ToLua.CheckDelegate<System.Action<Pathfinding.GraphNode>>(L, 2);
			obj.GetConnections(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ClosestPointOnNode(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Pathfinding.GridNode obj = (Pathfinding.GridNode)ToLua.CheckObject<Pathfinding.GridNode>(L, 1);
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			UnityEngine.Vector3 o = obj.ClosestPointOnNode(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetPortal(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			Pathfinding.GridNode obj = (Pathfinding.GridNode)ToLua.CheckObject<Pathfinding.GridNode>(L, 1);
			Pathfinding.GraphNode arg0 = (Pathfinding.GraphNode)ToLua.CheckObject<Pathfinding.GraphNode>(L, 2);
			System.Collections.Generic.List<UnityEngine.Vector3> arg1 = (System.Collections.Generic.List<UnityEngine.Vector3>)ToLua.CheckObject(L, 3, typeof(System.Collections.Generic.List<UnityEngine.Vector3>));
			System.Collections.Generic.List<UnityEngine.Vector3> arg2 = (System.Collections.Generic.List<UnityEngine.Vector3>)ToLua.CheckObject(L, 4, typeof(System.Collections.Generic.List<UnityEngine.Vector3>));
			bool arg3 = LuaDLL.luaL_checkboolean(L, 5);
			bool o = obj.GetPortal(arg0, arg1, arg2, arg3);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UpdateRecursiveG(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			Pathfinding.GridNode obj = (Pathfinding.GridNode)ToLua.CheckObject<Pathfinding.GridNode>(L, 1);
			Pathfinding.Path arg0 = (Pathfinding.Path)ToLua.CheckObject<Pathfinding.Path>(L, 2);
			Pathfinding.PathNode arg1 = (Pathfinding.PathNode)ToLua.CheckObject<Pathfinding.PathNode>(L, 3);
			Pathfinding.PathHandler arg2 = (Pathfinding.PathHandler)ToLua.CheckObject<Pathfinding.PathHandler>(L, 4);
			obj.UpdateRecursiveG(arg0, arg1, arg2);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Open(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			Pathfinding.GridNode obj = (Pathfinding.GridNode)ToLua.CheckObject<Pathfinding.GridNode>(L, 1);
			Pathfinding.Path arg0 = (Pathfinding.Path)ToLua.CheckObject<Pathfinding.Path>(L, 2);
			Pathfinding.PathNode arg1 = (Pathfinding.PathNode)ToLua.CheckObject<Pathfinding.PathNode>(L, 3);
			Pathfinding.PathHandler arg2 = (Pathfinding.PathHandler)ToLua.CheckObject<Pathfinding.PathHandler>(L, 4);
			obj.Open(arg0, arg1, arg2);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SerializeNode(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Pathfinding.GridNode obj = (Pathfinding.GridNode)ToLua.CheckObject<Pathfinding.GridNode>(L, 1);
			Pathfinding.Serialization.GraphSerializationContext arg0 = (Pathfinding.Serialization.GraphSerializationContext)ToLua.CheckObject<Pathfinding.Serialization.GraphSerializationContext>(L, 2);
			obj.SerializeNode(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DeserializeNode(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Pathfinding.GridNode obj = (Pathfinding.GridNode)ToLua.CheckObject<Pathfinding.GridNode>(L, 1);
			Pathfinding.Serialization.GraphSerializationContext arg0 = (Pathfinding.Serialization.GraphSerializationContext)ToLua.CheckObject<Pathfinding.Serialization.GraphSerializationContext>(L, 2);
			obj.DeserializeNode(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_HasConnectionsToAllEightNeighbours(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.GridNode obj = (Pathfinding.GridNode)o;
			bool ret = obj.HasConnectionsToAllEightNeighbours;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index HasConnectionsToAllEightNeighbours on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_EdgeNode(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.GridNode obj = (Pathfinding.GridNode)o;
			bool ret = obj.EdgeNode;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index EdgeNode on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_EdgeNode(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Pathfinding.GridNode obj = (Pathfinding.GridNode)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.EdgeNode = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index EdgeNode on a nil value");
		}
	}
}

