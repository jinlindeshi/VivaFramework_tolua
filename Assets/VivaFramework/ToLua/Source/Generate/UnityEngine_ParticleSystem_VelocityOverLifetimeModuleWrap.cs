//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UnityEngine_ParticleSystem_VelocityOverLifetimeModuleWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(UnityEngine.ParticleSystem.VelocityOverLifetimeModule), null);
		L.RegFunction("New", _CreateUnityEngine_ParticleSystem_VelocityOverLifetimeModule);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("enabled", get_enabled, set_enabled);
		L.RegVar("x", get_x, set_x);
		L.RegVar("y", get_y, set_y);
		L.RegVar("z", get_z, set_z);
		L.RegVar("xMultiplier", get_xMultiplier, set_xMultiplier);
		L.RegVar("yMultiplier", get_yMultiplier, set_yMultiplier);
		L.RegVar("zMultiplier", get_zMultiplier, set_zMultiplier);
		L.RegVar("orbitalX", get_orbitalX, set_orbitalX);
		L.RegVar("orbitalY", get_orbitalY, set_orbitalY);
		L.RegVar("orbitalZ", get_orbitalZ, set_orbitalZ);
		L.RegVar("orbitalXMultiplier", get_orbitalXMultiplier, set_orbitalXMultiplier);
		L.RegVar("orbitalYMultiplier", get_orbitalYMultiplier, set_orbitalYMultiplier);
		L.RegVar("orbitalZMultiplier", get_orbitalZMultiplier, set_orbitalZMultiplier);
		L.RegVar("orbitalOffsetX", get_orbitalOffsetX, set_orbitalOffsetX);
		L.RegVar("orbitalOffsetY", get_orbitalOffsetY, set_orbitalOffsetY);
		L.RegVar("orbitalOffsetZ", get_orbitalOffsetZ, set_orbitalOffsetZ);
		L.RegVar("orbitalOffsetXMultiplier", get_orbitalOffsetXMultiplier, set_orbitalOffsetXMultiplier);
		L.RegVar("orbitalOffsetYMultiplier", get_orbitalOffsetYMultiplier, set_orbitalOffsetYMultiplier);
		L.RegVar("orbitalOffsetZMultiplier", get_orbitalOffsetZMultiplier, set_orbitalOffsetZMultiplier);
		L.RegVar("radial", get_radial, set_radial);
		L.RegVar("radialMultiplier", get_radialMultiplier, set_radialMultiplier);
		L.RegVar("speedModifier", get_speedModifier, set_speedModifier);
		L.RegVar("speedModifierMultiplier", get_speedModifierMultiplier, set_speedModifierMultiplier);
		L.RegVar("space", get_space, set_space);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateUnityEngine_ParticleSystem_VelocityOverLifetimeModule(IntPtr L)
	{
		UnityEngine.ParticleSystem.VelocityOverLifetimeModule obj = new UnityEngine.ParticleSystem.VelocityOverLifetimeModule();
		ToLua.PushValue(L, obj);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_enabled(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.VelocityOverLifetimeModule obj = (UnityEngine.ParticleSystem.VelocityOverLifetimeModule)o;
			bool ret = obj.enabled;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index enabled on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_x(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.VelocityOverLifetimeModule obj = (UnityEngine.ParticleSystem.VelocityOverLifetimeModule)o;
			UnityEngine.ParticleSystem.MinMaxCurve ret = obj.x;
			ToLua.PushValue(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index x on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_y(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.VelocityOverLifetimeModule obj = (UnityEngine.ParticleSystem.VelocityOverLifetimeModule)o;
			UnityEngine.ParticleSystem.MinMaxCurve ret = obj.y;
			ToLua.PushValue(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index y on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_z(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.VelocityOverLifetimeModule obj = (UnityEngine.ParticleSystem.VelocityOverLifetimeModule)o;
			UnityEngine.ParticleSystem.MinMaxCurve ret = obj.z;
			ToLua.PushValue(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index z on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_xMultiplier(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.VelocityOverLifetimeModule obj = (UnityEngine.ParticleSystem.VelocityOverLifetimeModule)o;
			float ret = obj.xMultiplier;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index xMultiplier on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_yMultiplier(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.VelocityOverLifetimeModule obj = (UnityEngine.ParticleSystem.VelocityOverLifetimeModule)o;
			float ret = obj.yMultiplier;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index yMultiplier on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_zMultiplier(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.VelocityOverLifetimeModule obj = (UnityEngine.ParticleSystem.VelocityOverLifetimeModule)o;
			float ret = obj.zMultiplier;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index zMultiplier on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_orbitalX(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.VelocityOverLifetimeModule obj = (UnityEngine.ParticleSystem.VelocityOverLifetimeModule)o;
			UnityEngine.ParticleSystem.MinMaxCurve ret = obj.orbitalX;
			ToLua.PushValue(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index orbitalX on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_orbitalY(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.VelocityOverLifetimeModule obj = (UnityEngine.ParticleSystem.VelocityOverLifetimeModule)o;
			UnityEngine.ParticleSystem.MinMaxCurve ret = obj.orbitalY;
			ToLua.PushValue(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index orbitalY on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_orbitalZ(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.VelocityOverLifetimeModule obj = (UnityEngine.ParticleSystem.VelocityOverLifetimeModule)o;
			UnityEngine.ParticleSystem.MinMaxCurve ret = obj.orbitalZ;
			ToLua.PushValue(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index orbitalZ on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_orbitalXMultiplier(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.VelocityOverLifetimeModule obj = (UnityEngine.ParticleSystem.VelocityOverLifetimeModule)o;
			float ret = obj.orbitalXMultiplier;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index orbitalXMultiplier on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_orbitalYMultiplier(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.VelocityOverLifetimeModule obj = (UnityEngine.ParticleSystem.VelocityOverLifetimeModule)o;
			float ret = obj.orbitalYMultiplier;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index orbitalYMultiplier on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_orbitalZMultiplier(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.VelocityOverLifetimeModule obj = (UnityEngine.ParticleSystem.VelocityOverLifetimeModule)o;
			float ret = obj.orbitalZMultiplier;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index orbitalZMultiplier on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_orbitalOffsetX(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.VelocityOverLifetimeModule obj = (UnityEngine.ParticleSystem.VelocityOverLifetimeModule)o;
			UnityEngine.ParticleSystem.MinMaxCurve ret = obj.orbitalOffsetX;
			ToLua.PushValue(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index orbitalOffsetX on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_orbitalOffsetY(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.VelocityOverLifetimeModule obj = (UnityEngine.ParticleSystem.VelocityOverLifetimeModule)o;
			UnityEngine.ParticleSystem.MinMaxCurve ret = obj.orbitalOffsetY;
			ToLua.PushValue(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index orbitalOffsetY on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_orbitalOffsetZ(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.VelocityOverLifetimeModule obj = (UnityEngine.ParticleSystem.VelocityOverLifetimeModule)o;
			UnityEngine.ParticleSystem.MinMaxCurve ret = obj.orbitalOffsetZ;
			ToLua.PushValue(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index orbitalOffsetZ on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_orbitalOffsetXMultiplier(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.VelocityOverLifetimeModule obj = (UnityEngine.ParticleSystem.VelocityOverLifetimeModule)o;
			float ret = obj.orbitalOffsetXMultiplier;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index orbitalOffsetXMultiplier on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_orbitalOffsetYMultiplier(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.VelocityOverLifetimeModule obj = (UnityEngine.ParticleSystem.VelocityOverLifetimeModule)o;
			float ret = obj.orbitalOffsetYMultiplier;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index orbitalOffsetYMultiplier on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_orbitalOffsetZMultiplier(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.VelocityOverLifetimeModule obj = (UnityEngine.ParticleSystem.VelocityOverLifetimeModule)o;
			float ret = obj.orbitalOffsetZMultiplier;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index orbitalOffsetZMultiplier on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_radial(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.VelocityOverLifetimeModule obj = (UnityEngine.ParticleSystem.VelocityOverLifetimeModule)o;
			UnityEngine.ParticleSystem.MinMaxCurve ret = obj.radial;
			ToLua.PushValue(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index radial on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_radialMultiplier(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.VelocityOverLifetimeModule obj = (UnityEngine.ParticleSystem.VelocityOverLifetimeModule)o;
			float ret = obj.radialMultiplier;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index radialMultiplier on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_speedModifier(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.VelocityOverLifetimeModule obj = (UnityEngine.ParticleSystem.VelocityOverLifetimeModule)o;
			UnityEngine.ParticleSystem.MinMaxCurve ret = obj.speedModifier;
			ToLua.PushValue(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index speedModifier on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_speedModifierMultiplier(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.VelocityOverLifetimeModule obj = (UnityEngine.ParticleSystem.VelocityOverLifetimeModule)o;
			float ret = obj.speedModifierMultiplier;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index speedModifierMultiplier on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_space(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.VelocityOverLifetimeModule obj = (UnityEngine.ParticleSystem.VelocityOverLifetimeModule)o;
			UnityEngine.ParticleSystemSimulationSpace ret = obj.space;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index space on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_enabled(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.VelocityOverLifetimeModule obj = (UnityEngine.ParticleSystem.VelocityOverLifetimeModule)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.enabled = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index enabled on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_x(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.VelocityOverLifetimeModule obj = (UnityEngine.ParticleSystem.VelocityOverLifetimeModule)o;
			UnityEngine.ParticleSystem.MinMaxCurve arg0 = StackTraits<UnityEngine.ParticleSystem.MinMaxCurve>.Check(L, 2);
			obj.x = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index x on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_y(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.VelocityOverLifetimeModule obj = (UnityEngine.ParticleSystem.VelocityOverLifetimeModule)o;
			UnityEngine.ParticleSystem.MinMaxCurve arg0 = StackTraits<UnityEngine.ParticleSystem.MinMaxCurve>.Check(L, 2);
			obj.y = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index y on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_z(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.VelocityOverLifetimeModule obj = (UnityEngine.ParticleSystem.VelocityOverLifetimeModule)o;
			UnityEngine.ParticleSystem.MinMaxCurve arg0 = StackTraits<UnityEngine.ParticleSystem.MinMaxCurve>.Check(L, 2);
			obj.z = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index z on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_xMultiplier(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.VelocityOverLifetimeModule obj = (UnityEngine.ParticleSystem.VelocityOverLifetimeModule)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.xMultiplier = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index xMultiplier on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_yMultiplier(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.VelocityOverLifetimeModule obj = (UnityEngine.ParticleSystem.VelocityOverLifetimeModule)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.yMultiplier = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index yMultiplier on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_zMultiplier(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.VelocityOverLifetimeModule obj = (UnityEngine.ParticleSystem.VelocityOverLifetimeModule)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.zMultiplier = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index zMultiplier on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_orbitalX(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.VelocityOverLifetimeModule obj = (UnityEngine.ParticleSystem.VelocityOverLifetimeModule)o;
			UnityEngine.ParticleSystem.MinMaxCurve arg0 = StackTraits<UnityEngine.ParticleSystem.MinMaxCurve>.Check(L, 2);
			obj.orbitalX = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index orbitalX on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_orbitalY(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.VelocityOverLifetimeModule obj = (UnityEngine.ParticleSystem.VelocityOverLifetimeModule)o;
			UnityEngine.ParticleSystem.MinMaxCurve arg0 = StackTraits<UnityEngine.ParticleSystem.MinMaxCurve>.Check(L, 2);
			obj.orbitalY = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index orbitalY on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_orbitalZ(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.VelocityOverLifetimeModule obj = (UnityEngine.ParticleSystem.VelocityOverLifetimeModule)o;
			UnityEngine.ParticleSystem.MinMaxCurve arg0 = StackTraits<UnityEngine.ParticleSystem.MinMaxCurve>.Check(L, 2);
			obj.orbitalZ = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index orbitalZ on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_orbitalXMultiplier(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.VelocityOverLifetimeModule obj = (UnityEngine.ParticleSystem.VelocityOverLifetimeModule)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.orbitalXMultiplier = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index orbitalXMultiplier on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_orbitalYMultiplier(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.VelocityOverLifetimeModule obj = (UnityEngine.ParticleSystem.VelocityOverLifetimeModule)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.orbitalYMultiplier = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index orbitalYMultiplier on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_orbitalZMultiplier(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.VelocityOverLifetimeModule obj = (UnityEngine.ParticleSystem.VelocityOverLifetimeModule)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.orbitalZMultiplier = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index orbitalZMultiplier on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_orbitalOffsetX(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.VelocityOverLifetimeModule obj = (UnityEngine.ParticleSystem.VelocityOverLifetimeModule)o;
			UnityEngine.ParticleSystem.MinMaxCurve arg0 = StackTraits<UnityEngine.ParticleSystem.MinMaxCurve>.Check(L, 2);
			obj.orbitalOffsetX = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index orbitalOffsetX on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_orbitalOffsetY(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.VelocityOverLifetimeModule obj = (UnityEngine.ParticleSystem.VelocityOverLifetimeModule)o;
			UnityEngine.ParticleSystem.MinMaxCurve arg0 = StackTraits<UnityEngine.ParticleSystem.MinMaxCurve>.Check(L, 2);
			obj.orbitalOffsetY = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index orbitalOffsetY on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_orbitalOffsetZ(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.VelocityOverLifetimeModule obj = (UnityEngine.ParticleSystem.VelocityOverLifetimeModule)o;
			UnityEngine.ParticleSystem.MinMaxCurve arg0 = StackTraits<UnityEngine.ParticleSystem.MinMaxCurve>.Check(L, 2);
			obj.orbitalOffsetZ = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index orbitalOffsetZ on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_orbitalOffsetXMultiplier(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.VelocityOverLifetimeModule obj = (UnityEngine.ParticleSystem.VelocityOverLifetimeModule)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.orbitalOffsetXMultiplier = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index orbitalOffsetXMultiplier on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_orbitalOffsetYMultiplier(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.VelocityOverLifetimeModule obj = (UnityEngine.ParticleSystem.VelocityOverLifetimeModule)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.orbitalOffsetYMultiplier = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index orbitalOffsetYMultiplier on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_orbitalOffsetZMultiplier(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.VelocityOverLifetimeModule obj = (UnityEngine.ParticleSystem.VelocityOverLifetimeModule)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.orbitalOffsetZMultiplier = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index orbitalOffsetZMultiplier on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_radial(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.VelocityOverLifetimeModule obj = (UnityEngine.ParticleSystem.VelocityOverLifetimeModule)o;
			UnityEngine.ParticleSystem.MinMaxCurve arg0 = StackTraits<UnityEngine.ParticleSystem.MinMaxCurve>.Check(L, 2);
			obj.radial = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index radial on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_radialMultiplier(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.VelocityOverLifetimeModule obj = (UnityEngine.ParticleSystem.VelocityOverLifetimeModule)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.radialMultiplier = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index radialMultiplier on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_speedModifier(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.VelocityOverLifetimeModule obj = (UnityEngine.ParticleSystem.VelocityOverLifetimeModule)o;
			UnityEngine.ParticleSystem.MinMaxCurve arg0 = StackTraits<UnityEngine.ParticleSystem.MinMaxCurve>.Check(L, 2);
			obj.speedModifier = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index speedModifier on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_speedModifierMultiplier(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.VelocityOverLifetimeModule obj = (UnityEngine.ParticleSystem.VelocityOverLifetimeModule)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.speedModifierMultiplier = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index speedModifierMultiplier on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_space(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.VelocityOverLifetimeModule obj = (UnityEngine.ParticleSystem.VelocityOverLifetimeModule)o;
			UnityEngine.ParticleSystemSimulationSpace arg0 = (UnityEngine.ParticleSystemSimulationSpace)ToLua.CheckObject(L, 2, typeof(UnityEngine.ParticleSystemSimulationSpace));
			obj.space = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index space on a nil value");
		}
	}
}

