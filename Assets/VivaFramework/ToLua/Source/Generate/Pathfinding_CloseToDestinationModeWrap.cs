//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Pathfinding_CloseToDestinationModeWrap
{
	public static void Register(LuaState L)
	{
		L.BeginEnum(typeof(Pathfinding.CloseToDestinationMode));
		L.RegVar("Stop", get_Stop, null);
		L.RegVar("ContinueToExactDestination", get_ContinueToExactDestination, null);
		L.RegFunction("IntToEnum", IntToEnum);
		L.EndEnum();
		TypeTraits<Pathfinding.CloseToDestinationMode>.Check = CheckType;
		StackTraits<Pathfinding.CloseToDestinationMode>.Push = Push;
	}

	static void Push(IntPtr L, Pathfinding.CloseToDestinationMode arg)
	{
		ToLua.Push(L, arg);
	}

	static bool CheckType(IntPtr L, int pos)
	{
		return TypeChecker.CheckEnumType(typeof(Pathfinding.CloseToDestinationMode), L, pos);
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Stop(IntPtr L)
	{
		ToLua.Push(L, Pathfinding.CloseToDestinationMode.Stop);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ContinueToExactDestination(IntPtr L)
	{
		ToLua.Push(L, Pathfinding.CloseToDestinationMode.ContinueToExactDestination);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IntToEnum(IntPtr L)
	{
		int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
		Pathfinding.CloseToDestinationMode o = (Pathfinding.CloseToDestinationMode)arg0;
		ToLua.Push(L, o);
		return 1;
	}
}

